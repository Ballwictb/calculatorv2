---
interface Props {
  title?: string;
}
const Calc = "div";

const { title } = Astro.props;
import "../css/particles.css";
import "../css/style-calc.css";
import SpeedInsights from "@vercel/speed-insights/astro";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="description"
      content="Simple coclculator for mathematical operations"
    />
    <meta name="viewport" content="width=device-width" />
    <link
      rel="icon"
      type="image/svg+xml"
      href="../../public/icon/Favicon-32x32.svg"
    />
    <meta name="generator" content={Astro.generator} /><title>
      {title}
    </title>
    <script is:inline src="https://threejs.org/examples/js/libs/stats.min.js"
    ></script>
    <script
      is:inline
      src="https://cdn.jsdelivr.net/particles.js/2.0.0/particles.min.js"
    ></script>
    <script src="../js/app.js"></script>
    <script src="../js/script-calc.js"></script>
    <link
      rel="stylesheet"
      href="https://cdn.delivr.net/gh/Ballwictb/font-awesome-sixball-v2@main/six-rp/css/all.min.css"
    />
  </head>

  <body>
    <SpeedInsights />
    <slot />

    <Calc class="calculator">
      <h1>icon here</h1>
      <table>
        <tr>
          <td><input type="text" id="display" disabled /></td>
        </tr>
        <tr>
          <td><input type="button" value="C" onclick="clearDisplay(); " /></td>
          <td
            ><input type="button" value="%" onclick="addToDisplay('%'); " /></td
          >
          <td
            ><input
              type="button"
              value="^"
              onclick="addToDisplay('**'); "
            /></td
          >
          <td><input type="button" value="รท" onclick="addToDisplay('/');"  /></td
          >
        </tr>
        <tr>
          <td><input type="button" value="7" onclick="addToDisplay('7');"  /></td
          >
          <td><input type="button" value="8" onclick="addToDisplay('8');"  /></td
          >
          <td><input type="button" value="9" onclick="addToDisplay('9');"  /></td
          >
          <td><input type="button" value="x" onclick="addToDisplay('*');"  /></td
          >
        </tr>
        <tr>
          <td><input type="button" value="4" onclick="addToDisplay('4');"  /></td
          >
          <td><input type="button" value="5" onclick="addToDisplay('5');"  /></td
          >
          <td><input type="button" value="6" onclick="addToDisplay('6');"  /></td
          >
          <td
            ><input type="button" value="-" onclick="addToDisplay('-'); " /></td
          >
        </tr>
        <tr>
          <td><input type="button" value="1" onclick="addToDisplay('1');"  /></td
          >
          <td><input type="button" value="2" onclick="addToDisplay('2');"  /></td
          >
          <td><input type="button" value="3" onclick="addToDisplay('3');"  /></td
          >
          <td><input type="button" value="+" onclick="addToDisplay('+');"  /></td
          >
        </tr>
        <tr>
          <td><input type="button" value="0" onclick="addToDisplay('0');"  /></td
          >
          <td><input type="button" value="." onclick="addToDisplay('.');"  /></td
          >
          <td> <input type="button" value="=" onclick="calculate(); " /></td>
          <td><input type="button" value="DEL" onclick="clearNumber();" /></td>
        </tr>
      </table>
    </Calc>
  </body>
  <script>
    function addToDisplay(value) {
      document.getElementById("display").value += value;
    }

    function calculate() {
      try {
        document.getElementById("display").value = eval(
          document.getElementById("display").value
        );
      } catch (error) {
        document.getElementById("display").value = "Error";
      }
    }

    function clearDisplay() {
      document.getElementById("display").value = "";
    }

    function clearNumber() {
      var display = document.getElementById("display");
      var valor = display.value;
      display.value = valor.slice(0, -1);
    }
  </script>
</html>

<style is:global>
  :root {
    --accent: 136, 258, 234;
    --accent-light: 90, 200, 90;
    --accent-dark: 49, 10, 101;
    --accent-gradient: linear-gradient(
      45deg,
      rgb(var(--accent)),
      rgb(var(--accent-light)) 40%,
      #008000 60%
    );
  }
  html {
    /* background-image: url("../../public/images/sun-green.webp"); */
    background-size: cover;
    background-position: top;
    font-family: system-ui, sans-serif;
    /* background: #13151a; */
    /* background-size: 224px; */
  }
  code {
    font-family:
      Menlo,
      Monaco,
      Lucida Console,
      Liberation Mono,
      DejaVu Sans Mono,
      Bitstream Vera Sans Mono,
      Courier New,
      monospace;
  }
</style>
